// Flyway needs the database driver at build time
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.postgresql:postgresql:42.7.2'
		classpath 'org.flywaydb:flyway-database-postgresql:10.10.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '10.10.0'
}

group = 'com.loopy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.testcontainers:testcontainers-bom:1.19.1'
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// Database
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.10'
	
	// Flyway Migration
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	
	// Redis for caching
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// AWS SDK v2 for S3 (Cloudflare R2 compatible)
	implementation 'software.amazon.awssdk:s3:2.25.62'
	
	// MapStruct for DTO mapping
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	
	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	enabled = false // Disable tests temporarily during development
}

// Flyway configuration - uses environment variables
flyway {
	url = System.getenv('FLYWAY_URL') ?: 'jdbc:postgresql://localhost:5432/carden_dev'
	user = System.getenv('DB_USERNAME') ?: 'postgres'
	password = System.getenv('DB_PASSWORD') ?: 'password'
	locations = ['classpath:db/migration']
	baselineOnMigrate = (System.getenv('FLYWAY_BASELINE_ON_MIGRATE') ?: 'true').toBoolean()
	validateOnMigrate = (System.getenv('FLYWAY_VALIDATE_ON_MIGRATE') ?: 'true').toBoolean()
	cleanDisabled = (System.getenv('FLYWAY_CLEAN_DISABLED') ?: 'false').toBoolean()
}

// Show deprecation warnings during compilation
tasks.withType(JavaCompile) {
	options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
	options.deprecation = true
}
