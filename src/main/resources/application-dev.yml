spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/carden_dev
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000
      
  jpa:
    hibernate:
      ddl-auto: validate # Always use validate with Flyway
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        
  flyway:
    clean-disabled: false # Allow clean in development
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redispassword}
      timeout: 60000
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes
      
  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

# Load development environment variables from .env.dev file
spring.config.import: optional:file:.env.dev[.properties]

# Development specific logging
logging:
  level:
    com.loopy.carden: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.hibernate.orm.jdbc.bind: WARN
    org.hibernate.orm.jdbc.extract: WARN
    org.flywaydb: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/carden-dev.log

# Development JWT settings (longer expiration for convenience)
app:
  jwt:
    access-token-expiration: PT120M # 2 hours for development

r2:
  endpoint: ${R2_ENDPOINT:}
  bucket: ${R2_BUCKET:}
  access-key-id: ${R2_ACCESS_KEY_ID:}
  secret-access-key: ${R2_SECRET_ACCESS_KEY:}
  public-base-url: ${R2_PUBLIC_BASE_URL:}
